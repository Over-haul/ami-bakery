[Unit]
Description=kube-apiserver: Serve API requests for kubernetes components
Documentation=https://kubernetes.io/docs/
#Wants=network-online.target
#After=network-online.target

[Install]
WantedBy=multi-user.target

[Service]
User=kubernetes
Restart=on-failure
# Allow apiserver (as kubernetes user) to bind to privileged tcp ports
AmbientCapabilities=CAP_NET_BIND_SERVICE
# Common environment variables
EnvironmentFile=/etc/sysconfig/kube-common
# For CA certs and keys
EnvironmentFile=/etc/sysconfig/kube-pki
# Optionally include IAM authenticator configuration
EnvironmentFile=-/etc/sysconfig/aws-iam-authenticator
# APIServer specific configuration
EnvironmentFile=/etc/sysconfig/kube-apiserver
ExecStart=/usr/bin/kube-apiserver \
    --allow-privileged=true \
    --audit-log-path=/var/log/kubernetes/apiserver.audit.log \
    --audit-log-maxbackup=5 \
    --audit-log-maxsize=100 \
    --audit-policy-file=/etc/kubernetes/audit-policies/policy.yaml \
    --authorization-mode=RBAC,Node \
    --etcd-cafile=${ETCD_CA} \
    --etcd-certfile=${ETCD_CLIENT_CERT} \
    --etcd-keyfile=${ETCD_CLIENT_KEY} \
    --etcd-servers=https://${ENDPOINT}:2379 \
    --goaway-chance=${GOAWAY_CHANCE} \
    --secure-port=443 \
    --client-ca-file=${KUBE_CA} \
    --service-account-issuer=https://${ENDPOINT}:443 \
    --service-account-key-file=${SERVICE_ACCOUNT_PUB} \
    --service-account-signing-key-file=${SERVICE_ACCOUNT_KEY} \
    --service-cluster-ip-range=${SERVICE_CIDR} \
    --tls-cert-file=${TLS_CERT_FILE} \
    --tls-private-key-file=${TLS_PRIVATE_KEY_FILE} \
    --kubelet-preferred-address-types=InternalIP,InternalDNS,Hostname,ExternalIP \
    --kubelet-client-certificate=${TLS_CERT_FILE} \
    --kubelet-client-key=${TLS_PRIVATE_KEY_FILE} \
    --proxy-client-cert-file=${PROXY_CLIENT_CERT_FILE} \
    --proxy-client-key-file=${PROXY_CLIENT_KEY_FILE} \
    --requestheader-client-ca-file=${PROXY_CA} \
    --requestheader-extra-headers-prefix=X-Remote-Extra- \
    --requestheader-group-headers=X-Remote-Group \
    --requestheader-username-headers=X-Remote-User \
    -v=${LOG_LEVEL} \
    ${AWS_AUTH_HOOK_CONFIG}
